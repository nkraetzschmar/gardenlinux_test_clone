name: gardenlinux
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [ amd64, arm64 ]
        target: [ kvm, metal, gcp, aws, azure, ali, openstack, vmware, pxe ]
        modifier: [ "", "-dev" ]
    steps:
      - uses: actions/checkout@v2
      - run: |
          version="$(curl -s -f https://deb.debian.org/debian/pool/main/q/qemu/ | grep -oP '(?<=href="qemu-user-static_).*?(?=_amd64.deb")' | sort | tail -n 1)"
          wget "https://deb.debian.org/debian/pool/main/q/qemu/qemu-user-static_${version}_amd64.deb"
          sudo dpkg -i "qemu-user-static_${version}_amd64.deb"
      - run: make ARCH=${{ matrix.architecture }} ${{ matrix.target }}${{ matrix.modifier }}
      - run: find .build \( -name '*.raw' -o -name '*.vhd' -o -name '*.qcow2' -o -name '*.vmdk' \) -exec xz {} \;
      - uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.architecture }}-${{ matrix.target }}${{ matrix.modifier }}
          path: .build
  create_release:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          version="$(bin/garden-version today)"
          .github/workflows/release.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} create "auto_release_$version" "$version" > .github_release
      - uses: actions/upload-artifact@v2
        with:
          name: release
          path: .github_release
  upload_to_release:
    if: github.ref == 'refs/heads/main'
    needs: create_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [ amd64, arm64 ]
        target: [ kvm, metal, gcp, aws, azure, ali, openstack, vmware, pxe ]
        modifier: [ "", "-dev" ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: release
      - uses: actions/download-artifact@v2
        with:
          name: build-${{ matrix.architecture }}-${{ matrix.target }}${{ matrix.modifier }}
          path: .build
      - run: |
          release="$(cat .github_release)"
          find .build -type f | .github/workflows/release.sh ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} upload "$release"
